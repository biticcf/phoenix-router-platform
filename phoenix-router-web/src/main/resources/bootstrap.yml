spring: 
  aop: 
    auto: true
    # cglib proxy not jdk proxy
    #proxy-target-class: false
  custom: # 自定义属性
    default-env: ${SERVER_ENVIROMENT}
    default-name: application
    default-label: master
    default-profile: ${PROFILES_ACTIVITE}
  config: # 简化版本地数据源配置
    name: ${spring.custom.default-name}  
    additional-location: classpath:/config/${spring.custom.default-env}/
  profiles: 
    active: ${PROFILES_ACTIVITE}
  main:
    web-application-type: reactive
  cloud: 
    refresh: 
      enabled: true
    # RestTemplate和LoadBalancerClient的负载均衡重试策略,需要开启
    loadbalancer: 
      retry: true
    gateway: # GatewayAutoConfiguration
      enabled: true
      discovery: 
        locator: 
          enabled: true
      default-filters:
      - SwaggerHeaderFilter
      httpclient: # reactor的netty配置 HttpClientProperties
        connectTimeout: 30000   # The connect timeout in millis, the default is 45s
        pool: # Pool configuration for Netty HttpClient
          type: FIXED # Type of pool for HttpClient to use, defaults to ELASTIC
          name: voyager  # The channel pool map name, defaults to proxy
          maxConnections: 10240 # Only for type FIXED
          acquireTimeout: 30000 # Only for type FIXED
        #proxy: # Proxy configuration for Netty HttpClient
        #ssl: # SSL configuration for Netty HttpClient
  resources: 
    add-mappings: true

server: 
  compression: 
    enabled: true
    mime-types: text/html,text/css,application/json

eureka:
  instance:
    #服务刷新时间配置，每隔这个时间会主动心跳一次
    #默认30s
    lease-renewal-interval-in-seconds: 5
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
    #默认90s
    lease-expiration-duration-in-seconds: 15
    prefer-ip-address: true
    hostname: ${SERVER_HOSTNAME:${spring.cloud.client.hostname}}
    ip-address: ${SERVER_ACCESSABLE_IP:${spring.cloud.client.ip-address}}
    non-secure-port-enabled: true
    non-secure-port: ${SERVER_ACCESSABLE_PORT:10000}
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${SERVER_ACCESSABLE_IP:${spring.cloud.client.ip-address}}:${server.port}
    status-page-url-path: /info
    health-check-url-path: /health
  client:
    #eureka client刷新本地缓存时间
    #默认30s
    registryFetchIntervalSeconds: 5
    fetch-registry: true
    instance-info-replication-interval-seconds: 10
    initial-instance-info-replication-interval-seconds: 30
    eureka-service-url-poll-interval-seconds: 60
    eureka-server-read-timeout-seconds: 8
    eureka-server-connect-timeout-seconds: 5
    eureka-server-total-connections: 1000
    eureka-server-total-connections-per-host: 100
    eureka-connection-idle-timeout-seconds: 30

# ribbon负载全局配置
ribbon:
  ConnectionTomeout: 1000
  #eureka客户端ribbon刷新时间
  #默认30s
  ServerListRefreshInterval: 5000
  eureka:
    enable: false
  ReadTimeout: 5000
  # 对所有操作请求都进行重试(禁止)
  OkToRetryOnAllOperations: false
  # 切换实例的重试次数
  MaxAutoRetriesNextServer: 0
  # 对当前实例的重试次数
  MaxAutoRetries: 0
# ribbon负载定向配置
# <sericeId>: 
#   ribbon:
#     NFLoadBalancerPingClassName: com.netflix.loadbalancer.PingUrl

logging: 
  #path: ${LOGGING.PATH:/var/wd/phoenix-router_logs/}
  path: ${LOGGING_PATH}
  register-shutdown-hook: false

# ACTUATOR PROPERTIES
management: 
  server: 
    servlet: 
      context-path: /
  endpoints: 
    web: 
      base-path: /phoenix/router
      exposure: 
        include: '*'
        #exclude: env
  endpoint: 
    shutdown: 
      enabled: false
    health: 
      show-details: always    # never, always, when-authorized

# hystrix相关
feign:
  okhttp: 
    enabled: false
  httpclient:
    #Apache的HTTP Client替换Feign原始的http client
    enabled: true
    maxConnections: 20480
    maxConnectionsPerRoute: 512
    timeToLive: 60
    connectionTimeout: 10000
  client:
    # 配置文件优先级高
    defaultToProperties: true
    config:
      default:
        loggerLevel: full
        # retryer: feign.Retryer.NEVER_RETRY
  hystrix: 
    enabled: true
  compression: 
    request: 
      #请求和响应GZIP压缩支持
      enabled: true
      mime-types: application/json,application/xml,text/xml
      min-request-size: 2048
    response: 
      enabled: false

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 15000
        # 熔断关闭
        timeout:
          enabled: false
  threadpool:
    default:
      coreSize: 40
      maximumSize: 100
      maxQueueSize: 100

voyager: 
  token: 
    check: 
      uri: /permission/v1/token/{userId}
      white-uri: # url白名单,支持正则表达式
      - uri: /permission/v1/user/login
        method: post
      - uri: /permission/v1/user/xxx  # 忘记密码接口
        method: post
      black-uri: # url黑名单,支持正则表达式
      - uri: /permission/v1/token/\d{10,40}
        method: get
